{
	"name": "Connect2Synapse",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "klssparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "02eed967-d19e-42e9-bab0-d7c8f8577c3b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/9ea57abb-990d-4601-94b5-2a2a6d418274/resourceGroups/krlange/providers/Microsoft.Synapse/workspaces/kls-wsmv/bigDataPools/klssparkpool",
				"name": "klssparkpool",
				"type": "Spark",
				"endpoint": "https://kls-wsmv.dev.azuresynapse.usgovcloudapi.net/livyApi/versions/2019-11-01-preview/sparkPools/klssparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			},
			{
				"cell_type": "code",
				"source": [
					"server = 'kls-wsmv-ondemand.sql.azuresynapse.usgovcloudapi.net'\r\n",
					"Port = 1433\r\n",
					"Database = \"klsserverlessDB\"\r\n",
					"jdbcUrl = f\"jdbc:sqlserver://{server}:{Port};databaseName={Database};encrypt=true;trustServerCertificate=true;hostNameInCertificate=*.database.windows.net;loginTimeout=30\"\r\n",
					"token=TokenLibrary.getConnectionString(\"AzureSynapseAnalytics1\")\r\n",
					"query = \"SELECT 1\"\r\n",
					"conn_Prop = {\r\n",
					"\"driver\" : \"com.microsoft.sqlserver.jdbc.SQLServerDriver\",\r\n",
					"\"accessToken\" : token\r\n",
					"}\r\n",
					"df = spark.read.jdbc(url=jdbcUrl, table=query, properties=conn_Prop)\r\n",
					"display(df)\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"server = 'kls-wsmv-ondemand.sql.azuresynapse.usgovcloudapi.net'\r\n",
					"Port = 1433\r\n",
					"Database = \"klsserverlessDB\"\r\n",
					"jdbcUrl = f\"jdbc:sqlserver://{server}:{Port};databaseName={Database};encrypt=true;trustServerCertificate=true;hostNameInCertificate=*.database.windows.net;loginTimeout=30\"\r\n",
					"#token=TokenLibrary.getConnectionString(\"AzureSynapseAnalytics1\")\r\n",
					"token=mssparkutils.credentials.getConnectionStringOrCreds(\"AzureSynapseAnalytics1\")\r\n",
					"print(token)\r\n",
					"print(mssparkutils.credentials.isValidToken(token))\r\n",
					"print(mssparkutils.credentials.getPropertiesAll('AzureSynapseAnalytics1'))\r\n",
					" \r\n",
					"df = spark.read \\\r\n",
					"        .format(\"jdbc\") \\\r\n",
					"        .option(\"url\", jdbcUrl) \\\r\n",
					"        .option(\"query\", \"select * from sys.views\" ) \\\r\n",
					"        .option(\"accessToken\", token) \\\r\n",
					"        .load()\r\n",
					"display(df)"
				]
			}
		]
	}
}